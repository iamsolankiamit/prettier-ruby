// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`block.rb 1`] = `
example.map! do |o|
  location = Module::Submodule::Class.new(varia,
                                       obj['x']['y'],
                                       obj['m']['n'])
  Ex::Ample.new(o['test'], location,
                   o['test2'],
                   o['test3'], o['test4'].to_i)
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
example.map! do |o|
  location = Module::Submodule::Class.new(varia, obj['x']['y'], obj['m']['n'])
  Ex::Ample.new(o['test'], location, o['test2'], o['test3'], o['test4'].to_i)
end

`;

exports[`block_1.rb 1`] = `
very_long_function_name_here(long_arg_name, another_arg, file) do |file|
  files = file
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
very_long_function_name_here(long_arg_name, another_arg, file) do |file|
  files = file
end

`;

exports[`block_params.rb 1`] = `
func { }
func {

}
func { puts "hello world" }
func { |x| puts x }
func { |x, y| puts x, y }
func { |x, y, z| puts x, y, z }
func { |x, y, z|
  puts x, y, z
}

func do; end
func do

end
func do
  puts "hello world"
end

func do |x|
  puts x
end

func do |x, y|
  puts x, y
end

func do |x, y, z|
  puts x, y, z
end

def index
  @people = Person.find(:all)

  respond_to do |format|
    format.html
    format.js
    format.xml do
      render :xml => @people.to_xml
    end
  end
end
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
func {  }
func {  }
func { puts 'hello world' }
func { |x| puts x }
func { |x, y| puts x, y }
func { |x, y, z| puts x, y, z }
func { |x, y, z| puts x, y, z }
func do

end
func do

end
func do
  puts 'hello world'
end
func do |x|
  puts x
end
func do |x, y|
  puts x, y
end
func do |x, y, z|
  puts x, y, z
end
def index
  @people = Person.find(:all)
  respond_to do |format|
    format.html
    format.js
    format.xml do
      render(:xml => @people.to_xml)
    end
  end
end

`;
